Architecture:                       x86_64
CPU op-mode(s):                     32-bit, 64-bit
Address sizes:                      46 bits physical, 48 bits virtual
Byte Order:                         Little Endian
CPU(s):                             28
On-line CPU(s) list:                0-27
Vendor ID:                          GenuineIntel
Model name:                         Intel(R) Xeon(R) Gold 6132 CPU @ 2.60GHz
CPU family:                         6
Model:                              85
Thread(s) per core:                 1
Core(s) per socket:                 14
Socket(s):                          2
Stepping:                           4
CPU(s) scaling MHz:                 50%
CPU max MHz:                        3700.0000
CPU min MHz:                        1000.0000
BogoMIPS:                           5200.00
Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd mba ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke md_clear flush_l1d arch_capabilities
Virtualization:                     VT-x
L1d cache:                          896 KiB (28 instances)
L1i cache:                          896 KiB (28 instances)
L2 cache:                           28 MiB (28 instances)
L3 cache:                           38.5 MiB (2 instances)
NUMA node(s):                       2
NUMA node0 CPU(s):                  0-13
NUMA node1 CPU(s):                  14-27
Vulnerability Gather data sampling: Mitigation; Microcode
Vulnerability Itlb multihit:        KVM: Mitigation: Split huge pages
Vulnerability L1tf:                 Mitigation; PTE Inversion; VMX conditional cache flushes, SMT disabled
Vulnerability Mds:                  Mitigation; Clear CPU buffers; SMT disabled
Vulnerability Meltdown:             Mitigation; PTI
Vulnerability Mmio stale data:      Mitigation; Clear CPU buffers; SMT disabled
Vulnerability Retbleed:             Mitigation; IBRS
Vulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl and seccomp
Vulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:           Mitigation; IBRS; IBPB conditional; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
Vulnerability Srbds:                Not affected
Vulnerability Tsx async abort:      Mitigation; Clear CPU buffers; SMT disabled
LAAB_REPS=10 LAAB_N=3000 LAAB_PREFIX='' /usr/bin/make -C ../../C/ run
gcc -O3  sgemm.c -c
gcc sgemm.o -o sgemm -lopenblas
gcc -O3  ssyrk.c -c
gcc ssyrk.o -o ssyrk -lopenblas
gcc -O3  strmm.c -c
gcc strmm.o -o strmm -lopenblas
gcc -O3  stridiagmm.c -c -fopenmp
gcc stridiagmm.o -o stridiagmm -fopenmp
REP=10  ./sgemm 3000 3000 3000
[LAAB] C | sgemm | optimized=0.287 s
[LAAB] C | sgemm | optimized=0.279 s
[LAAB] C | sgemm | optimized=0.278 s
[LAAB] C | sgemm | optimized=0.277 s
[LAAB] C | sgemm | optimized=0.275 s
[LAAB] C | sgemm | optimized=0.277 s
[LAAB] C | sgemm | optimized=0.285 s
[LAAB] C | sgemm | optimized=0.278 s
[LAAB] C | sgemm | optimized=0.277 s
[LAAB] C | sgemm | optimized=0.276 s
REP=10  ./ssyrk 3000 3000
[LAAB] C | mp_syrk | optimized=0.155 s
[LAAB] C | mp_syrk | optimized=0.150 s
[LAAB] C | mp_syrk | optimized=0.150 s
[LAAB] C | mp_syrk | optimized=0.150 s
[LAAB] C | mp_syrk | optimized=0.148 s
[LAAB] C | mp_syrk | optimized=0.151 s
[LAAB] C | mp_syrk | optimized=0.149 s
[LAAB] C | mp_syrk | optimized=0.150 s
[LAAB] C | mp_syrk | optimized=0.150 s
[LAAB] C | mp_syrk | optimized=0.150 s
REP=10  ./strmm 3000 3000
[LAAB] C | mp_trmm | optimized=0.140 s
[LAAB] C | mp_trmm | optimized=0.143 s
[LAAB] C | mp_trmm | optimized=0.138 s
[LAAB] C | mp_trmm | optimized=0.138 s
[LAAB] C | mp_trmm | optimized=0.137 s
[LAAB] C | mp_trmm | optimized=0.138 s
[LAAB] C | mp_trmm | optimized=0.137 s
[LAAB] C | mp_trmm | optimized=0.137 s
[LAAB] C | mp_trmm | optimized=0.138 s
[LAAB] C | mp_trmm | optimized=0.137 s
REP=10  ./stridiagmm 3000 3000
[LAAB] C | mp_tridiag | optimized=0.009519 s
[LAAB] C | mp_tridiag | optimized=0.009450 s
[LAAB] C | mp_tridiag | optimized=0.009604 s
[LAAB] C | mp_tridiag | optimized=0.009422 s
[LAAB] C | mp_tridiag | optimized=0.009366 s
[LAAB] C | mp_tridiag | optimized=0.009439 s
[LAAB] C | mp_tridiag | optimized=0.009607 s
[LAAB] C | mp_tridiag | optimized=0.009735 s
[LAAB] C | mp_tridiag | optimized=0.009793 s
[LAAB] C | mp_tridiag | optimized=0.009875 s
rm *.o sgemm ssyrk strmm stridiagmm
LAAB_REPS=10 LAAB_N=3000  python sgemm.py 
[LAAB] PyTorch | sgemm | actual=0.31121 s | linalg_matmul=0.28656 s
[LAAB] PyTorch | sgemm | actual=0.29081 s | linalg_matmul=0.29012 s
[LAAB] PyTorch | sgemm | actual=0.28727 s | linalg_matmul=0.28805 s
[LAAB] PyTorch | sgemm | actual=0.28732 s | linalg_matmul=0.29261 s
[LAAB] PyTorch | sgemm | actual=0.28826 s | linalg_matmul=0.28975 s
[LAAB] PyTorch | sgemm | actual=0.28862 s | linalg_matmul=0.28797 s
[LAAB] PyTorch | sgemm | actual=0.28719 s | linalg_matmul=0.30224 s
[LAAB] PyTorch | sgemm | actual=0.29226 s | linalg_matmul=0.28816 s
[LAAB] PyTorch | sgemm | actual=0.28867 s | linalg_matmul=0.28930 s
[LAAB] PyTorch | sgemm | actual=0.28742 s | linalg_matmul=0.29043 s
LAAB_REPS=10 LAAB_N=3000  python cse_addition.py 
[LAAB] PyTorch | cse_addition | optimized=0.31573 s | actual=0.33092 s
[LAAB] PyTorch | cse_addition | optimized=0.31416 s | actual=0.31457 s
[LAAB] PyTorch | cse_addition | optimized=0.31437 s | actual=0.31248 s
[LAAB] PyTorch | cse_addition | optimized=0.32067 s | actual=0.31405 s
[LAAB] PyTorch | cse_addition | optimized=0.31479 s | actual=0.31558 s
[LAAB] PyTorch | cse_addition | optimized=0.33705 s | actual=0.31367 s
[LAAB] PyTorch | cse_addition | optimized=0.31302 s | actual=0.31656 s
[LAAB] PyTorch | cse_addition | optimized=0.31393 s | actual=0.31578 s
[LAAB] PyTorch | cse_addition | optimized=0.31585 s | actual=0.32298 s
[LAAB] PyTorch | cse_addition | optimized=0.31517 s | actual=0.31381 s
LAAB_REPS=10 LAAB_N=3000  python cse_matmul_paranthesis.py 
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58480 s | actual=0.59572 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58419 s | actual=0.58507 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58252 s | actual=0.59273 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58585 s | actual=0.58066 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58432 s | actual=0.58679 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.59055 s | actual=0.58295 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58483 s | actual=0.58281 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58720 s | actual=0.58549 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.59856 s | actual=0.58538 s
[LAAB] PyTorch | cse_matmul_paranthesis | optimized=0.58419 s | actual=0.58560 s
LAAB_REPS=10 LAAB_N=3000  python cse_matmul_no_paranthesis.py 
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58555 s | actual=0.87300 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58524 s | actual=0.87123 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58248 s | actual=0.87750 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58429 s | actual=0.86982 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58890 s | actual=0.87900 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58325 s | actual=0.87017 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58484 s | actual=0.86696 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58259 s | actual=0.87782 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.59163 s | actual=0.86415 s
[LAAB] PyTorch | cse_matmul_no_paranthesis | optimized=0.58493 s | actual=0.87732 s
LAAB_REPS=10 LAAB_N=3000  python cse_suboptimal.py 
[LAAB] PyTorch | cse_suboptimal | optimized=0.02713 s | actual=0.87377 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02757 s | actual=0.87649 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02678 s | actual=0.87087 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02690 s | actual=0.86954 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02674 s | actual=0.87153 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02659 s | actual=0.86997 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02715 s | actual=0.87437 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02665 s | actual=0.87355 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02679 s | actual=0.90046 s
[LAAB] PyTorch | cse_suboptimal | optimized=0.02672 s | actual=0.88308 s
LAAB_REPS=10 LAAB_N=3000  python matchain_ltor.py 
[LAAB] PyTorch | matchain_ltor | optimized=0.01233 s | actual=0.01491 s | linalg_multidot=0.04762 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01207 s | actual=0.01218 s | linalg_multidot=0.01224 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01153 s | actual=0.01171 s | linalg_multidot=0.01155 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01168 s | actual=0.01165 s | linalg_multidot=0.01169 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01166 s | actual=0.01172 s | linalg_multidot=0.01155 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01151 s | actual=0.01162 s | linalg_multidot=0.01186 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01166 s | actual=0.01175 s | linalg_multidot=0.01166 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01152 s | actual=0.01161 s | linalg_multidot=0.01167 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01148 s | actual=0.01151 s | linalg_multidot=0.01159 s
[LAAB] PyTorch | matchain_ltor | optimized=0.01160 s | actual=0.01155 s | linalg_multidot=0.01162 s
LAAB_REPS=10 LAAB_N=3000  python matchain_rtol.py 
[LAAB] PyTorch | matchain_rtol | optimized=0.01259 s | actual=0.30185 s | linalg_multidot=0.04805 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01256 s | actual=0.30248 s | linalg_multidot=0.01352 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01187 s | actual=0.29655 s | linalg_multidot=0.01293 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01188 s | actual=0.29783 s | linalg_multidot=0.01303 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01211 s | actual=0.31712 s | linalg_multidot=0.01280 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01169 s | actual=0.29394 s | linalg_multidot=0.01293 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01189 s | actual=0.29693 s | linalg_multidot=0.01273 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01192 s | actual=0.29323 s | linalg_multidot=0.01485 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01184 s | actual=0.29319 s | linalg_multidot=0.01280 s
[LAAB] PyTorch | matchain_rtol | optimized=0.01160 s | actual=0.29717 s | linalg_multidot=0.01248 s
LAAB_REPS=10 LAAB_N=3000  python matchain_mixed.py 
[LAAB] PyTorch | matchain_mixed | optimized=0.04100 s | actual=0.32087 s | linalg_multidot=0.07497 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04110 s | actual=0.31769 s | linalg_multidot=0.04104 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04077 s | actual=0.31985 s | linalg_multidot=0.04040 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04104 s | actual=0.31646 s | linalg_multidot=0.04276 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04041 s | actual=0.31657 s | linalg_multidot=0.04043 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04013 s | actual=0.31936 s | linalg_multidot=0.04012 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04069 s | actual=0.32068 s | linalg_multidot=0.04008 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04050 s | actual=0.32102 s | linalg_multidot=0.04018 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04078 s | actual=0.31934 s | linalg_multidot=0.04307 s
[LAAB] PyTorch | matchain_mixed | optimized=0.04090 s | actual=0.32212 s | linalg_multidot=0.04373 s
LAAB_REPS=10 LAAB_N=3000  python mp_trmm.py 
[LAAB] PyTorch | mp_trmm | actual=0.28848 s | linalg_matmul=0.28468 s
[LAAB] PyTorch | mp_trmm | actual=0.28364 s | linalg_matmul=0.28733 s
[LAAB] PyTorch | mp_trmm | actual=0.28413 s | linalg_matmul=0.28637 s
[LAAB] PyTorch | mp_trmm | actual=0.30399 s | linalg_matmul=0.31789 s
[LAAB] PyTorch | mp_trmm | actual=0.29028 s | linalg_matmul=0.28659 s
[LAAB] PyTorch | mp_trmm | actual=0.29003 s | linalg_matmul=0.29163 s
[LAAB] PyTorch | mp_trmm | actual=0.28869 s | linalg_matmul=0.28976 s
[LAAB] PyTorch | mp_trmm | actual=0.28831 s | linalg_matmul=0.29193 s
[LAAB] PyTorch | mp_trmm | actual=0.28601 s | linalg_matmul=0.28998 s
[LAAB] PyTorch | mp_trmm | actual=0.28925 s | linalg_matmul=0.28971 s
LAAB_REPS=10 LAAB_N=3000  python mp_syrk.py 
[LAAB] PyTorch | mp_syrk | actual=0.28803 s | linalg_matmul=0.28457 s
[LAAB] PyTorch | mp_syrk | actual=0.28563 s | linalg_matmul=0.28655 s
[LAAB] PyTorch | mp_syrk | actual=0.29972 s | linalg_matmul=0.29993 s
[LAAB] PyTorch | mp_syrk | actual=0.28572 s | linalg_matmul=0.28604 s
[LAAB] PyTorch | mp_syrk | actual=0.28952 s | linalg_matmul=0.28335 s
[LAAB] PyTorch | mp_syrk | actual=0.28715 s | linalg_matmul=0.28393 s
[LAAB] PyTorch | mp_syrk | actual=0.28630 s | linalg_matmul=0.28367 s
[LAAB] PyTorch | mp_syrk | actual=0.30488 s | linalg_matmul=0.28747 s
[LAAB] PyTorch | mp_syrk | actual=0.28251 s | linalg_matmul=0.28561 s
[LAAB] PyTorch | mp_syrk | actual=0.28191 s | linalg_matmul=0.28563 s
LAAB_REPS=10 LAAB_N=3000  python mp_tridiag.py 
[LAAB] PyTorch | mp_tridiag | actual=0.28972 s | linalg_matmul=0.28720 s
[LAAB] PyTorch | mp_tridiag | actual=0.28391 s | linalg_matmul=0.29108 s
[LAAB] PyTorch | mp_tridiag | actual=0.28666 s | linalg_matmul=0.28588 s
[LAAB] PyTorch | mp_tridiag | actual=0.28998 s | linalg_matmul=0.28336 s
[LAAB] PyTorch | mp_tridiag | actual=0.29273 s | linalg_matmul=0.28338 s
[LAAB] PyTorch | mp_tridiag | actual=0.28660 s | linalg_matmul=0.28640 s
[LAAB] PyTorch | mp_tridiag | actual=0.28300 s | linalg_matmul=0.28559 s
[LAAB] PyTorch | mp_tridiag | actual=0.28674 s | linalg_matmul=0.28710 s
[LAAB] PyTorch | mp_tridiag | actual=0.28340 s | linalg_matmul=0.28879 s
[LAAB] PyTorch | mp_tridiag | actual=0.28493 s | linalg_matmul=0.28632 s
LAAB_REPS=10 LAAB_N=3000  python am_distributivity1.py 
[LAAB] PyTorch | am_distributivity1 | optimized=0.30799 s | actual=0.59639 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.30754 s | actual=0.59815 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31165 s | actual=0.59421 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31416 s | actual=0.61687 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.32089 s | actual=0.59895 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31043 s | actual=0.60057 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31034 s | actual=0.60105 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31492 s | actual=0.59917 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.32005 s | actual=0.60814 s
[LAAB] PyTorch | am_distributivity1 | optimized=0.31417 s | actual=0.60106 s
LAAB_REPS=10 LAAB_N=3000  python am_distributivity2.py 
[LAAB] PyTorch | am_distributivity2 | optimized=0.01912 s | actual=0.32807 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01939 s | actual=0.32241 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01866 s | actual=0.32317 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01874 s | actual=0.32066 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01880 s | actual=0.32233 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01870 s | actual=0.32314 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01869 s | actual=0.32081 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01876 s | actual=0.32235 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01868 s | actual=0.32417 s
[LAAB] PyTorch | am_distributivity2 | optimized=0.01864 s | actual=0.31950 s
LAAB_REPS=10 LAAB_N=3000  python am_blocked.py 
[LAAB] PyTorch | am_blocked | optimized=0.18895 s | actual=0.30805 s  | linalg_matmul=0.30675 s
[LAAB] PyTorch | am_blocked | optimized=0.18659 s | actual=0.28999 s  | linalg_matmul=0.28615 s
[LAAB] PyTorch | am_blocked | optimized=0.18231 s | actual=0.28586 s  | linalg_matmul=0.28908 s
[LAAB] PyTorch | am_blocked | optimized=0.18715 s | actual=0.29048 s  | linalg_matmul=0.28669 s
[LAAB] PyTorch | am_blocked | optimized=0.16601 s | actual=0.27102 s  | linalg_matmul=0.28936 s
[LAAB] PyTorch | am_blocked | optimized=0.17707 s | actual=0.27551 s  | linalg_matmul=0.28609 s
[LAAB] PyTorch | am_blocked | optimized=0.16846 s | actual=0.28763 s  | linalg_matmul=0.29307 s
[LAAB] PyTorch | am_blocked | optimized=0.17881 s | actual=0.27442 s  | linalg_matmul=0.28627 s
[LAAB] PyTorch | am_blocked | optimized=0.16850 s | actual=0.28711 s  | linalg_matmul=0.29220 s
[LAAB] PyTorch | am_blocked | optimized=0.18071 s | actual=0.30406 s  | linalg_matmul=0.29238 s
LAAB_REPS=10 LAAB_N=3000  python cm_loops.py 
[LAAB] PyTorch | cm_loops | optimized=0.43615 s | actual=1.06655 s
[LAAB] PyTorch | cm_loops | optimized=0.33650 s | actual=0.33574 s
[LAAB] PyTorch | cm_loops | optimized=0.33200 s | actual=0.33491 s
[LAAB] PyTorch | cm_loops | optimized=0.33384 s | actual=0.33552 s
[LAAB] PyTorch | cm_loops | optimized=0.33663 s | actual=0.33269 s
[LAAB] PyTorch | cm_loops | optimized=0.33350 s | actual=0.33515 s
[LAAB] PyTorch | cm_loops | optimized=0.33679 s | actual=0.35499 s
[LAAB] PyTorch | cm_loops | optimized=0.33903 s | actual=0.33225 s
[LAAB] PyTorch | cm_loops | optimized=0.34148 s | actual=0.33688 s
[LAAB] PyTorch | cm_loops | optimized=0.34332 s | actual=0.33572 s
LAAB_REPS=10 LAAB_N=3000  python cm_partial_op_sum.py 
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00185 s | actual=0.06006 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00182 s | actual=0.02336 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00131 s | actual=0.02294 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00132 s | actual=0.02290 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00130 s | actual=0.02288 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00133 s | actual=0.02278 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00136 s | actual=0.02282 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00131 s | actual=0.02282 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00131 s | actual=0.02273 s
[LAAB] PyTorch | cm_partial_op_sum | optimized=0.00131 s | actual=0.02272 s
LAAB_REPS=10 LAAB_N=3000  python cm_partial_op_prod.py 
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00443 s | actual=0.32256 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00193 s | actual=0.28519 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28279 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28588 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28289 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28539 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00142 s | actual=0.28275 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00142 s | actual=0.28551 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28705 s
[LAAB] PyTorch | cm_partial_op_prod | optimized=0.00143 s | actual=0.28447 s

Architecture:                            x86_64
CPU op-mode(s):                          32-bit, 64-bit
Address sizes:                           48 bits physical, 48 bits virtual
Byte Order:                              Little Endian
CPU(s):                                  48
On-line CPU(s) list:                     0-47
Vendor ID:                               AuthenticAMD
Model name:                              AMD EPYC 7413 24-Core Processor
CPU family:                              25
Model:                                   1
Thread(s) per core:                      1
Core(s) per socket:                      24
Socket(s):                               2
Stepping:                                1
Frequency boost:                         enabled
CPU max MHz:                             3632.1799
CPU min MHz:                             1500.0000
BogoMIPS:                                5290.58
Flags:                                   fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf rapl pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 invpcid_single hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr rdpru wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload vgif v_spec_ctrl umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca
Virtualization:                          AMD-V
L1d cache:                               1.5 MiB (48 instances)
L1i cache:                               1.5 MiB (48 instances)
L2 cache:                                24 MiB (48 instances)
L3 cache:                                256 MiB (8 instances)
NUMA node(s):                            2
NUMA node0 CPU(s):                       0-23
NUMA node1 CPU(s):                       24-47
Vulnerability Gather data sampling:      Not affected
Vulnerability Indirect target selection: Not affected
Vulnerability Itlb multihit:             Not affected
Vulnerability L1tf:                      Not affected
Vulnerability Mds:                       Not affected
Vulnerability Meltdown:                  Not affected
Vulnerability Mmio stale data:           Not affected
Vulnerability Reg file data sampling:    Not affected
Vulnerability Retbleed:                  Not affected
Vulnerability Spec rstack overflow:      Mitigation; safe RET
Vulnerability Spec store bypass:         Mitigation; Speculative Store Bypass disabled via prctl and seccomp
Vulnerability Spectre v1:                Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:                Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
Vulnerability Srbds:                     Not affected
Vulnerability Tsa:                       Mitigation; Clear CPU buffers
Vulnerability Tsx async abort:           Not affected
LAAB_REPS=10 LAAB_N=3000 LAAB_PREFIX='taskset -c 0' LD_BLAS=-lopenblas /usr/bin/make -C ../../C/ run
gcc -O3  sgemm.c -c
gcc sgemm.o -o sgemm -lopenblas
gcc -O3  sgemv.c -c
gcc sgemv.o -o sgemv -lopenblas
gcc -O3  ssyrk.c -c
gcc ssyrk.o -o ssyrk -lopenblas
gcc -O3  strmm.c -c
gcc strmm.o -o strmm -lopenblas
gcc -O3  stridiagmm.c -c -fopenmp
gcc stridiagmm.o -o stridiagmm -fopenmp
REP=10 taskset -c 0 ./sgemm 3000 3000 3000
[LAAB] C | mm_sgemm | ref_positive=0.496 s
[LAAB] C | mm_sgemm | ref_positive=0.494 s
[LAAB] C | mm_sgemm | ref_positive=0.494 s
[LAAB] C | mm_sgemm | ref_positive=0.495 s
[LAAB] C | mm_sgemm | ref_positive=0.494 s
[LAAB] C | mm_sgemm | ref_positive=0.495 s
[LAAB] C | mm_sgemm | ref_positive=0.494 s
[LAAB] C | mm_sgemm | ref_positive=0.495 s
[LAAB] C | mm_sgemm | ref_positive=0.494 s
[LAAB] C | mm_sgemm | ref_positive=0.495 s
REP=10 taskset -c 0 ./sgemv 3000 3000 3000
[LAAB] C | mm_sgemm | ref_negative=2.277946 s
[LAAB] C | mm_sgemm | ref_negative=2.280585 s
[LAAB] C | mm_sgemm | ref_negative=2.268344 s
[LAAB] C | mm_sgemm | ref_negative=2.276504 s
[LAAB] C | mm_sgemm | ref_negative=2.275115 s
[LAAB] C | mm_sgemm | ref_negative=2.278950 s
[LAAB] C | mm_sgemm | ref_negative=2.287691 s
[LAAB] C | mm_sgemm | ref_negative=2.250195 s
[LAAB] C | mm_sgemm | ref_negative=2.279305 s
[LAAB] C | mm_sgemm | ref_negative=2.266667 s
REP=10 taskset -c 0 ./ssyrk 3000 3000
[LAAB] C | mm_syrk | ref_positive=0.254 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.253 s
[LAAB] C | mm_syrk | ref_positive=0.252 s
[LAAB] C | mm_syrk | ref_positive=0.253 s
REP=10 taskset -c 0 ./strmm 3000 3000
[LAAB] C | mm_trmm | ref_positive=0.249 s
[LAAB] C | mm_trmm | ref_positive=0.246 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
[LAAB] C | mm_trmm | ref_positive=0.247 s
REP=10 taskset -c 0 ./stridiagmm 3000 3000
[LAAB] C | mm_tridiag | ref_positive=0.004758 s
[LAAB] C | mm_tridiag | ref_positive=0.004510 s
[LAAB] C | mm_tridiag | ref_positive=0.004312 s
[LAAB] C | mm_tridiag | ref_positive=0.004336 s
[LAAB] C | mm_tridiag | ref_positive=0.004346 s
[LAAB] C | mm_tridiag | ref_positive=0.004414 s
[LAAB] C | mm_tridiag | ref_positive=0.004372 s
[LAAB] C | mm_tridiag | ref_positive=0.004352 s
[LAAB] C | mm_tridiag | ref_positive=0.004388 s
[LAAB] C | mm_tridiag | ref_positive=0.004344 s
rm *.o sgemm sgemv ssyrk strmm stridiagmm
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python mm_sgemm.py 
[LAAB] Jax | mm_sgemm | operator=0.58113 s | linalg_matmul=0.58091 s
[LAAB] Jax | mm_sgemm | operator=0.51550 s | linalg_matmul=0.51001 s
[LAAB] Jax | mm_sgemm | operator=0.50722 s | linalg_matmul=0.53868 s
[LAAB] Jax | mm_sgemm | operator=0.51266 s | linalg_matmul=0.50885 s
[LAAB] Jax | mm_sgemm | operator=0.53935 s | linalg_matmul=0.50922 s
[LAAB] Jax | mm_sgemm | operator=0.50942 s | linalg_matmul=0.50801 s
[LAAB] Jax | mm_sgemm | operator=0.50933 s | linalg_matmul=0.50825 s
[LAAB] Jax | mm_sgemm | operator=0.50826 s | linalg_matmul=0.52513 s
[LAAB] Jax | mm_sgemm | operator=0.52323 s | linalg_matmul=0.50768 s
[LAAB] Jax | mm_sgemm | operator=0.50841 s | linalg_matmul=0.50806 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cse_addition.py 
[LAAB] Jax | cse_addition | ref_positive=0.57830 s | operator=1.12699 s | ref_negative=1.15661 s
[LAAB] Jax | cse_addition | ref_positive=0.52551 s | operator=1.01954 s | ref_negative=1.05102 s
[LAAB] Jax | cse_addition | ref_positive=0.52528 s | operator=1.03781 s | ref_negative=1.05056 s
[LAAB] Jax | cse_addition | ref_positive=0.51112 s | operator=1.03734 s | ref_negative=1.02224 s
[LAAB] Jax | cse_addition | ref_positive=0.51235 s | operator=1.05161 s | ref_negative=1.02470 s
[LAAB] Jax | cse_addition | ref_positive=0.54700 s | operator=1.01834 s | ref_negative=1.09400 s
[LAAB] Jax | cse_addition | ref_positive=0.51115 s | operator=1.03694 s | ref_negative=1.02229 s
[LAAB] Jax | cse_addition | ref_positive=0.51139 s | operator=1.01851 s | ref_negative=1.02278 s
[LAAB] Jax | cse_addition | ref_positive=0.51129 s | operator=1.05175 s | ref_negative=1.02259 s
[LAAB] Jax | cse_addition | ref_positive=0.51128 s | operator=1.01825 s | ref_negative=1.02256 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cse_matmul_paranthesis.py 
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.10369 s | operator=1.64868 s | ref_negative=1.65553 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.01460 s | operator=1.55497 s | ref_negative=1.52190 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.02551 s | operator=1.55396 s | ref_negative=1.53827 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.02892 s | operator=1.52155 s | ref_negative=1.54337 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.03579 s | operator=1.53986 s | ref_negative=1.55368 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.01428 s | operator=1.54240 s | ref_negative=1.52142 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.01336 s | operator=1.55567 s | ref_negative=1.52003 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.01388 s | operator=1.52252 s | ref_negative=1.52081 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.01373 s | operator=1.52145 s | ref_negative=1.52060 s
[LAAB] Jax | cse_matmul_paranthesis | ref_positive=1.03185 s | operator=1.54697 s | ref_negative=1.54778 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cse_matmul_no_paranthesis.py 
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.09199 s | operator=1.64860 s | ref_negative=1.63799 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01498 s | operator=1.54162 s | ref_negative=1.52248 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01606 s | operator=1.55362 s | ref_negative=1.52409 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01409 s | operator=1.54264 s | ref_negative=1.52114 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01398 s | operator=1.54306 s | ref_negative=1.52097 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.03295 s | operator=1.52729 s | ref_negative=1.54943 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01430 s | operator=1.50938 s | ref_negative=1.52145 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.03498 s | operator=1.54581 s | ref_negative=1.55247 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.01423 s | operator=1.52697 s | ref_negative=1.52134 s
[LAAB] Jax | cse_matmul_no_paranthesis | ref_positive=1.03600 s | operator=1.50683 s | ref_negative=1.55400 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cse_suboptimal.py 
[LAAB] Jax | cse_suboptimal | ref_positive=0.06662 s | operator=1.65905 s | ref_negative=1.10013 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03668 s | operator=1.54667 s | ref_negative=1.03747 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.05679 s | operator=1.54153 s | ref_negative=1.01921 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.05956 s | operator=1.50574 s | ref_negative=1.01989 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03673 s | operator=1.50589 s | ref_negative=1.03562 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03596 s | operator=1.52646 s | ref_negative=1.01841 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03672 s | operator=1.50550 s | ref_negative=1.03927 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03595 s | operator=1.52162 s | ref_negative=1.01822 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03583 s | operator=1.50699 s | ref_negative=1.01802 s
[LAAB] Jax | cse_suboptimal | ref_positive=0.03692 s | operator=1.54097 s | ref_negative=1.01942 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python matchain_ltor.py 
[LAAB] Jax | matchain_ltor | ref_positive=0.02895 s | operator=0.03181 s | linalg_multidot=0.03127 s | ref_negative=0.55843 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01078 s | operator=0.01113 s | linalg_multidot=0.01073 s | ref_negative=0.52891 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01068 s | operator=0.01422 s | linalg_multidot=0.01085 s | ref_negative=0.50895 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01060 s | operator=0.01096 s | linalg_multidot=0.01065 s | ref_negative=0.50822 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01061 s | operator=0.01093 s | linalg_multidot=0.01080 s | ref_negative=0.52208 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01069 s | operator=0.01859 s | linalg_multidot=0.01075 s | ref_negative=0.50796 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01066 s | operator=0.01088 s | linalg_multidot=0.01067 s | ref_negative=0.50805 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01065 s | operator=0.01111 s | linalg_multidot=0.01074 s | ref_negative=0.52920 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01072 s | operator=0.01158 s | linalg_multidot=0.01077 s | ref_negative=0.50773 s
[LAAB] Jax | matchain_ltor | ref_positive=0.01065 s | operator=0.01110 s | linalg_multidot=0.01072 s | ref_negative=0.50802 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python matchain_rtol.py 
[LAAB] Jax | matchain_rtol | ref_positive=0.03730 s | operator=0.55666 s | linalg_multidot=0.03996 s | ref_negative=0.57359 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01989 s | operator=0.51409 s | linalg_multidot=0.02050 s | ref_negative=0.50998 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01939 s | operator=0.50823 s | linalg_multidot=0.02037 s | ref_negative=0.52770 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01989 s | operator=0.51180 s | linalg_multidot=0.02052 s | ref_negative=0.50848 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01980 s | operator=0.52003 s | linalg_multidot=0.02058 s | ref_negative=0.50866 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01936 s | operator=0.50788 s | linalg_multidot=0.02037 s | ref_negative=0.52223 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01980 s | operator=0.51753 s | linalg_multidot=0.02050 s | ref_negative=0.50866 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01984 s | operator=0.50820 s | linalg_multidot=0.02046 s | ref_negative=0.50875 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01982 s | operator=0.52635 s | linalg_multidot=0.02538 s | ref_negative=0.50891 s
[LAAB] Jax | matchain_rtol | ref_positive=0.01976 s | operator=0.50820 s | linalg_multidot=0.02046 s | ref_negative=0.50867 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python matchain_mixed.py 
[LAAB] Jax | matchain_mixed | ref_positive=0.05904 s | operator=0.59187 s | linalg_multidot=0.06061 s | ref_negative=0.62184 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03490 s | operator=0.56111 s | linalg_multidot=0.03604 s | ref_negative=0.54267 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03496 s | operator=0.57774 s | linalg_multidot=0.04611 s | ref_negative=0.54291 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03494 s | operator=0.54321 s | linalg_multidot=0.03600 s | ref_negative=0.56894 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03448 s | operator=0.54934 s | linalg_multidot=0.03558 s | ref_negative=0.54271 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03455 s | operator=0.56178 s | linalg_multidot=0.04462 s | ref_negative=0.54294 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03437 s | operator=0.54347 s | linalg_multidot=0.03544 s | ref_negative=0.54226 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03444 s | operator=0.54321 s | linalg_multidot=0.03541 s | ref_negative=0.57474 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03438 s | operator=0.54518 s | linalg_multidot=0.03542 s | ref_negative=0.54277 s
[LAAB] Jax | matchain_mixed | ref_positive=0.03441 s | operator=0.54343 s | linalg_multidot=0.03531 s | ref_negative=0.54263 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python mm_trmm.py 
[LAAB] Jax | mm_trmm | operator=0.54794 s | linalg_matmul=0.57475 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.52028 s | linalg_matmul=0.50913 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.50818 s | linalg_matmul=0.53223 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.51696 s | linalg_matmul=0.50824 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.53781 s | linalg_matmul=0.51146 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.50805 s | linalg_matmul=0.50801 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.53249 s | linalg_matmul=0.50852 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.50800 s | linalg_matmul=0.50776 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.50798 s | linalg_matmul=0.53612 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_trmm | operator=0.50845 s | linalg_matmul=0.50799 s | ref_negative=R+mm_sgemm
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python mm_syrk.py 
[LAAB] Jax | mm_syrk | operator=0.54802 s | linalg_matmul=0.54716 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.50787 s | linalg_matmul=0.52603 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.51314 s | linalg_matmul=0.50901 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.50779 s | linalg_matmul=0.52792 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.51140 s | linalg_matmul=0.50783 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.53120 s | linalg_matmul=0.50806 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.50743 s | linalg_matmul=0.50742 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.53117 s | linalg_matmul=0.50755 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.50756 s | linalg_matmul=0.50734 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_syrk | operator=0.50719 s | linalg_matmul=0.53117 s | ref_negative=R+mm_sgemm
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python mm_tridiag.py 
[LAAB] Jax | mm_tridiag | operator=0.54750 s | linalg_matmul=0.57951 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.51314 s | linalg_matmul=0.51069 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.50870 s | linalg_matmul=0.53963 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.51277 s | linalg_matmul=0.50922 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.53418 s | linalg_matmul=0.51021 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.50875 s | linalg_matmul=0.50911 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.50977 s | linalg_matmul=0.50960 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.50894 s | linalg_matmul=0.52892 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.52308 s | linalg_matmul=0.50963 s | ref_negative=R+mm_sgemm
[LAAB] Jax | mm_tridiag | operator=0.50934 s | linalg_matmul=0.50963 s | ref_negative=R+mm_sgemm
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python am_distributivity1.py 
[LAAB] Jax | am_distributivity1 | ref_positive=0.59489 s | operator=1.13036 s | ref_negative=1.09499 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53363 s | operator=1.05963 s | ref_negative=1.02027 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53662 s | operator=1.06841 s | ref_negative=1.04088 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53052 s | operator=1.01982 s | ref_negative=1.06590 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.52886 s | operator=1.02166 s | ref_negative=1.02171 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.55912 s | operator=1.02075 s | ref_negative=1.04119 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.52882 s | operator=1.01933 s | ref_negative=1.02108 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53029 s | operator=1.02136 s | ref_negative=1.05920 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53052 s | operator=1.04051 s | ref_negative=1.02220 s
[LAAB] Jax | am_distributivity1 | ref_positive=0.53036 s | operator=1.02184 s | ref_negative=1.01987 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python am_distributivity2.py 
[LAAB] Jax | am_distributivity2 | ref_positive=0.04760 s | operator=0.56424 s | ref_negative=0.59279 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02173 s | operator=0.52288 s | ref_negative=0.51924 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02172 s | operator=0.51782 s | ref_negative=0.55191 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02147 s | operator=0.52043 s | ref_negative=0.51853 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02188 s | operator=0.51981 s | ref_negative=0.51885 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.03015 s | operator=0.54268 s | ref_negative=0.51932 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02171 s | operator=0.51843 s | ref_negative=0.51919 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02534 s | operator=0.54894 s | ref_negative=0.51916 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02140 s | operator=0.51843 s | ref_negative=0.51853 s
[LAAB] Jax | am_distributivity2 | ref_positive=0.02142 s | operator=0.51861 s | ref_negative=0.55083 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python am_transpose.py 
[LAAB] Jax | am_transpose | ref_positive=1.09565 s | operator=1.65049 s | ref_negative=1.64715 s
[LAAB] Jax | am_transpose | ref_positive=1.03402 s | operator=1.50673 s | ref_negative=1.52113 s
[LAAB] Jax | am_transpose | ref_positive=1.04695 s | operator=1.50665 s | ref_negative=1.50802 s
[LAAB] Jax | am_transpose | ref_positive=1.01484 s | operator=1.54092 s | ref_negative=1.52764 s
[LAAB] Jax | am_transpose | ref_positive=1.01468 s | operator=1.52536 s | ref_negative=1.50670 s
[LAAB] Jax | am_transpose | ref_positive=1.01532 s | operator=1.53994 s | ref_negative=1.54146 s
[LAAB] Jax | am_transpose | ref_positive=1.02897 s | operator=1.50683 s | ref_negative=1.52802 s
[LAAB] Jax | am_transpose | ref_positive=1.01493 s | operator=1.50638 s | ref_negative=1.50678 s
[LAAB] Jax | am_transpose | ref_positive=1.03328 s | operator=1.50624 s | ref_negative=1.52795 s
[LAAB] Jax | am_transpose | ref_positive=1.01506 s | operator=1.50760 s | ref_negative=1.50722 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python am_blocked.py 
[LAAB] Jax | am_blocked | ref_positive=0.31694 s | operator=0.54799 s  | linalg_matmul=0.57470 s | ref_negative=0.55665 s
[LAAB] Jax | am_blocked | ref_positive=0.28513 s | operator=0.50920 s  | linalg_matmul=0.50975 s | ref_negative=0.50902 s
[LAAB] Jax | am_blocked | ref_positive=0.29563 s | operator=0.52739 s  | linalg_matmul=0.51094 s | ref_negative=0.52481 s
[LAAB] Jax | am_blocked | ref_positive=0.30308 s | operator=0.50925 s  | linalg_matmul=0.50946 s | ref_negative=0.50910 s
[LAAB] Jax | am_blocked | ref_positive=0.28719 s | operator=0.50914 s  | linalg_matmul=0.52757 s | ref_negative=0.51786 s
[LAAB] Jax | am_blocked | ref_positive=0.29911 s | operator=0.50923 s  | linalg_matmul=0.50963 s | ref_negative=0.50901 s
[LAAB] Jax | am_blocked | ref_positive=0.28410 s | operator=0.50931 s  | linalg_matmul=0.50969 s | ref_negative=0.52922 s
[LAAB] Jax | am_blocked | ref_positive=0.28514 s | operator=0.50945 s  | linalg_matmul=0.50970 s | ref_negative=0.50885 s
[LAAB] Jax | am_blocked | ref_positive=0.29562 s | operator=0.52465 s  | linalg_matmul=0.51365 s | ref_negative=0.50859 s
[LAAB] Jax | am_blocked | ref_positive=0.28624 s | operator=0.50919 s  | linalg_matmul=0.50964 s | ref_negative=0.52319 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cm_loops.py 
[LAAB] Jax | cm_loops | ref_positive=0.61882 s | operator=0.57686 s | ref_negative=1.85646 s
[LAAB] Jax | cm_loops | ref_positive=0.52836 s | operator=0.53415 s | ref_negative=1.58508 s
[LAAB] Jax | cm_loops | ref_positive=0.52925 s | operator=0.52850 s | ref_negative=1.58774 s
[LAAB] Jax | cm_loops | ref_positive=0.54102 s | operator=0.55985 s | ref_negative=1.62305 s
[LAAB] Jax | cm_loops | ref_positive=0.52920 s | operator=0.52924 s | ref_negative=1.58760 s
[LAAB] Jax | cm_loops | ref_positive=0.55891 s | operator=0.52799 s | ref_negative=1.67672 s
[LAAB] Jax | cm_loops | ref_positive=0.52857 s | operator=0.54178 s | ref_negative=1.58572 s
[LAAB] Jax | cm_loops | ref_positive=0.52850 s | operator=0.52964 s | ref_negative=1.58549 s
[LAAB] Jax | cm_loops | ref_positive=0.52981 s | operator=0.52799 s | ref_negative=1.58943 s
[LAAB] Jax | cm_loops | ref_positive=0.52899 s | operator=0.56433 s | ref_negative=1.58696 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cm_partial_op_sum.py 
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00839489 s | operator=0.01062395 s | ref_negative=0.02979 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00001597 s | operator=0.00220933 s | ref_negative=0.01838 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00001528 s | operator=0.00225529 s | ref_negative=0.01835 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00001460 s | operator=0.00222581 s | ref_negative=0.01844 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00001261 s | operator=0.00222248 s | ref_negative=0.01833 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00001468 s | operator=0.00229016 s | ref_negative=0.01841 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00003819 s | operator=0.00218183 s | ref_negative=0.03752 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00002841 s | operator=0.00238149 s | ref_negative=0.01821 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00002283 s | operator=0.00217934 s | ref_negative=0.01809 s
[LAAB] Jax | cm_partial_op_sum | ref_positive=0.00002252 s | operator=0.00217593 s | ref_negative=0.01814 s
LAAB_REPS=10 LAAB_N=3000 taskset -c 0 python cm_partial_op_prod.py 
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.01269 s | operator=0.55142 s | ref_negative=0.56614 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00008 s | operator=0.52615 s | ref_negative=0.52045 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00007 s | operator=0.51123 s | ref_negative=0.54828 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00011 s | operator=0.52396 s | ref_negative=0.50601 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00173 s | operator=0.53957 s | ref_negative=0.51103 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00008 s | operator=0.51130 s | ref_negative=0.50621 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00056 s | operator=0.54363 s | ref_negative=0.50698 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00006 s | operator=0.51125 s | ref_negative=0.50608 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00006 s | operator=0.51146 s | ref_negative=0.53753 s
[LAAB] Jax | cm_partial_op_prod | ref_positive=0.00010 s | operator=0.51333 s | ref_negative=0.50647 s
